@{
    ViewData["Title"] = "Input Result";
}

<!-- /////////////////////////////////////////// -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Tính thông số động cơ</h4>
            </div><!-- end card header -->
            <div class="card-body align-items-center d-flex">
                <!-- With Controls -->
                <!-- Input with Placeholder -->
                <form action="javascript:void(0);">
                    <div class="row">

                        <!-- Hệ số quá tải (Tính tự động) -->
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="overloadFactor" class="form-label">Hệ số quá tải</label>
                                <input type="text" class="form-control" id="overloadFactor" readonly>
                            </div>
                        </div><!--end col-->

                        <div class="col-6"> <!--TinhHieuSuatChungN-->
                            <div class="mb-3">
                                <label for="overallEfficiency" class="form-label">Hiệu suất chung</label>
                                <input type="number" class="form-control" id="overallEfficiency" readonly>
                            </div>
                        </div><!--end col-->

                        <div class="col-6">
                            <div class="mb-3"><!--TinhCongSuatCanThietPct(double N)-->
                                <label for="requiredMotorEfficiency" class="form-label">Công suất cần thiết của động
                                    cơ</label>
                                <input type="number" class="form-control" id="requiredMotorEfficiency" readonly>
                            </div>
                        </div><!--end col-->

                        <div class="col-6">
                            <div class="mb-3"><!--TinhTocDoQuayCanThietNlv()-->
                                <label for="requiredMotorSpeed" class="form-label">Số vòng quay của trục công
                                    tác</label>
                                <input type="number" class="form-control" id="requiredMotorSpeed" readonly>
                            </div>
                        </div><!--end col-->

                        <div class="col-6">
                            <div class="mb-3"><!--TinhTocDoSoBoNsb-->
                                <label for="NsbSpeed" class="form-label">Tốc độ quay cần thiết sơ bộ của động cơ</label>
                                <input type="number" class="form-control" id="NsbSpeed" readonly>
                            </div>
                        </div><!--end col-->

                        <div class="col-6">
                            <div class="mb-3"><!--TinhTiSoTruyenUn(double Ndc,double Nlv)-->
                                <label for="Un" class="form-label">Tỷ số truyền của hệ dẫn động (bộ truyền xích)</label>
                                <input type="number" class="form-control" id="Un" readonly>
                            </div>
                        </div><!--end col-->

                        <div class="col-6">
                            <div class="mb-3">
                                <label for="MomenSoVongQuay" class="form-label">MomenSoVongQuay</label>
                                <textarea class="form-control" id="MomenSoVongQuay" rows="4" readonly></textarea>
                            </div>
                        </div>




                    </div><!--end row-->
                </form>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Danh sách động cơ phù hợp</h4>
            </div><!-- end card header -->
            <div class="card-body align-items-center d-flex">
                <!-- With Controls -->
                <!-- Input with Placeholder -->
                <div style="max-height: 500px; overflow-y: auto;">
                    <table class="table table-bordered table-hover">
                        <thead class="table-dark" style="position: sticky; top: 0; z-index: 1;">
                            <tr>
                                <th>#</th>
                                <th>Ảnh</th>
                                <th>Model</th>
                                <th>Công suất</th>
                                <th>Điện áp</th>
                                <th>Tốc độ quay</th>
                                <th>Kích thước khung</th>
                                <th>Chất liệu</th>
                                <th>Bảo vệ</th>
                                <th>Tiêu chuẩn</th>
                                <th>Kiểu lắp đặt</th>
                                <th>Đường kính trục</th>
                                <th>Footprint</th>
                                <th>Công nghệ</th>
                                <th>Chi tiết</th>
                            </tr>
                        </thead>
                        <tbody id="catalogTableBody">
                            <!-- Dữ liệu động cơ sẽ được render ở đây -->
                        </tbody>
                    </table>
                </div>

            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Tính thông số bộ truyền xích</h4>
            </div><!-- end card header -->
            <div class="card-body align-items-center d-flex">
                <!-- With Controls -->
                <!-- Input with Placeholder -->
                <form action="javascript:void(0);">
                    <div class="row">
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="pitch" class="form-label">Bước xích (p) [mm]</label>
                                <input type="number" class="form-control" id="pitch" readonly>
                            </div>
                        </div>

                        <!-- Khoảng cách trục (KhoangCachTruc_aStan) -->
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="shaftDistance" class="form-label">Khoảng cách trục [mm]</label>
                                <input type="number" class="form-control" id="shaftDistance" readonly>
                            </div>
                        </div>

                        <!-- Kết luận an toàn xích (XichAnToan) -->
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="chainSafe" class="form-label">Kết luận an toàn xích</label>
                                <input type="text" class="form-control" id="chainSafe" readonly>
                            </div>
                        </div>

                        <!-- Trạng thái đường kính đĩa xích (DuongKinhDiaXich_TinhToan) -->
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="diskDiameterCalc" class="form-label">Tính toán đường kính đĩa xích</label>
                                <input type="text" class="form-control" id="diskDiameterCalc" readonly>
                            </div>
                        </div>

                        <!-- Độ bền tiếp xúc (DoBenTiepXuc_Oh) -->
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="contactStrength" class="form-label">Độ bền tiếp xúc [MPa]</label>
                                <input type="number" class="form-control" id="contactStrength" readonly>
                            </div>
                        </div>

                        <!-- Lực tác dụng lên trục (LucTacDungTrenTruc_Frk) -->
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="shaftForce" class="form-label">Lực tác dụng lên trục [N]</label>
                                <input type="number" class="form-control" id="shaftForce" readonly>
                            </div>
                        </div>
                    </div><!--end row-->
                </form>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
</div>

<!--Hiển thị kq bộ truyền xích -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Thông số bộ truyền xích</h4>
            </div>
            <div class="card-body align-items-center d-flex">
                <div style="max-height: 500px; flex-grow: 1; overflow-y: auto;">
                    <table class="table table-bordered table-hover w-100" id="chain-table">
                        <thead class="table-dark" style="position: sticky; top: 0; z-index: 1;">
                            <tr>
                                <th>Thông số</th>
                                <th>Giá trị</th>
                            </tr>
                        </thead>
                        <tbody id="table-body">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Tính toán bộ truyền bánh răng</h4>
            </div>
            <div class="card-body">
                <form action="javascript:void(0);" class="w-100">
                    <div class="row">
                        <!-- Bánh nhỏ -->
                        <div class="col-6">
                            <h5>Bánh nhỏ</h5>
                            <div class="mb-2"><label>Vật liệu</label><input id="matSmall" class="form-control" readonly>
                            </div>
                            <div class="mb-2"><label>Ob [MPa]</label><input id="obSmall" type="number"
                                    class="form-control" readonly></div>
                            <div class="mb-2"><label>Och [MPa]</label><input id="ochSmall" type="number"
                                    class="form-control" readonly></div>
                            <div class="mb-2"><label>HB</label><input id="hbSmall" class="form-control" readonly></div>
                            <div class="mb-2"><label>Kích thước S</label><input id="sizeSmall" class="form-control"
                                    readonly></div>
                        </div>

                        <!-- Bánh lớn -->
                        <div class="col-6">
                            <h5>Bánh lớn</h5>
                            <div class="mb-2"><label>Vật liệu</label><input id="matLarge" class="form-control" readonly>
                            </div>
                            <div class="mb-2"><label>Ob [MPa]</label><input id="obLarge" type="number"
                                    class="form-control" readonly></div>
                            <div class="mb-2"><label>Och [MPa]</label><input id="ochLarge" type="number"
                                    class="form-control" readonly></div>
                            <div class="mb-2"><label>HB</label><input id="hbLarge" class="form-control" readonly></div>
                            <div class="mb-2"><label>Kích thước</label><input id="sizeLarge" class="form-control"
                                    readonly></div>
                        </div>

                        <!-- Đầu vào ứng suất -->
                        <div class="col-12 mt-3">
                            <h5>Đầu vào ứng suất</h5>
                            <div class="row">
                                <div class="col-4 mb-2"><label>Ohlim1</label><input id="ohlim1" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Ohlim2</label><input id="ohlim2" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Sh</label><input id="sh" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Oflim1</label><input id="oflim1" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Oflim2</label><input id="oflim2" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Sf</label><input id="sf" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>HB1</label><input id="hb1" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>HB2</label><input id="hb2" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Nho1</label><input id="nho1" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Nho2</label><input id="nho2" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Nfo</label><input id="nfo" type="number"
                                        class="form-control" readonly></div>
                            </div>
                        </div>

                        <!-- Ứng suất cho phép -->
                        <div class="col-6 mt-3">
                            <label>Ứng suất tiếp xúc cho phép [MPa]</label>
                            <input id="ohAllow" type="number" class="form-control" readonly>
                        </div>

                        <div class="col-6 mt-3">
                            <label>Ứng suất uốn cho phép [MPa]</label>
                            <input id="oh2Allow" type="number" class="form-control" readonly>
                        </div>

                        <!-- TODO b20 - 21 --> 


                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<!-- TODO b20 cấp nhanh --> 
<!--Hiển thị kq bánh răng -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Thông số bánh răng cấp nhanh</h4>
            </div>
            <div class="card-body align-items-center d-flex">
                <div style="max-height: 500px; flex-grow: 1; overflow-y: auto;">
                    <table class="table table-bordered table-hover w-100" id="fastgear-table">
                        <thead class="table-dark" style="position: sticky; top: 0; z-index: 1;">
                            <tr>
                                <th>Thông số</th>
                                <th>Giá trị</th>
                            </tr>
                        </thead>
                        <tbody id="gearfast-body">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- TODO b21 cấp chậm --> 
<!--Hiển thị kq bánh răng -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Thông số bánh răng cấp chậm</h4>
            </div>
            <div class="card-body align-items-center d-flex">
                <div style="max-height: 500px; flex-grow: 1; overflow-y: auto;">
                    <table class="table table-bordered table-hover w-100" id="slowgear-table">
                        <thead class="table-dark" style="position: sticky; top: 0; z-index: 1;">
                            <tr>
                                <th>Thông số</th>
                                <th>Giá trị</th>
                            </tr>
                        </thead>
                        <tbody id="gearslow-body">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- /////////////////////////////////////////// -->
<div class="row">
    <div class="w-100 text-center my-3">
        <button class="btn btn-primary" onclick="ExportPDF()">Export</button>
    </div>
</div>
<!-- //////////////////////////////////////////////// -->


</div>

<script>
    ///////////////////////////////////////////////////////////////

    function CalGear(transType, force, speed, diameter, serviceTime, loadN, Torchlist, tlist) {
        console.log("Gọi CalGear");

        if (!transType || transType === "Chọn bộ truyền") {
            console.warn("Chưa chọn bộ truyền, gán mặc định là 'chain'");
            transType = "chain";
        }

        const requestData = {
            transType,
            force,
            speed,
            diameter,
            serviceTime,
            loadN,
            Torchlist,
            tlist
        };

        console.log("Gọi CalGear với bộ truyền:", requestData);

        fetch("/Input/CalGear", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(requestData)
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Lỗi mạng hoặc backend không phản hồi!");
                }
                return response.json();
            })
            .then(data => {
                pdfContent = data;
                console.log("data: ", data);

                // thông số động cơ
                document.getElementById("overloadFactor").value = data.overloadFactor || "";
                document.getElementById("overallEfficiency").value = data.overallEfficiency || "";
                document.getElementById("requiredMotorEfficiency").value = data.requiredMotorEfficiency || "";
                document.getElementById("requiredMotorSpeed").value = data.requiredMotorSpeed || "";
                document.getElementById("NsbSpeed").value = data.nsbSpeed || "";
                document.getElementById("Un").value = data.un || "";
                document.getElementById("MomenSoVongQuay").value = data.momenSoVongQuay || "";

                // thông số xích
                document.getElementById("pitch").value = data.pitch || "";
                document.getElementById("shaftDistance").value = data.shaftDistance || "";
                document.getElementById("chainSafe").value = data.chainSafe ? "Đạt" : "Không đạt";
                document.getElementById("diskDiameterCalc").value = data.diskDiameterCalc || "";
                document.getElementById("contactStrength").value = data.contactStrength || "";
                document.getElementById("shaftForce").value = data.shaftForce || "";

                // gọi hàm hiển thị bảng xích
                renderChainTable(data);

                // Sửa tên đúng: vatLieuBoTruyen (viết thường)
                const vl = data.vatLieuBoTruyen;
                const input = data.dauVaoUngSuat;

                if (vl && vl["Bánh nhỏ"] && vl["Bánh lớn"]) {
                    document.getElementById("matSmall").value = vl["Bánh nhỏ"]["Vật liệu"] || "";
                    document.getElementById("obSmall").value = vl["Bánh nhỏ"]["Ob"] || "";
                    document.getElementById("ochSmall").value = vl["Bánh nhỏ"]["Och"] || "";
                    document.getElementById("hbSmall").value = vl["Bánh nhỏ"]["HB"] || "";
                    document.getElementById("sizeSmall").value = vl["Bánh nhỏ"]["Kích thước S"] || "";

                    document.getElementById("matLarge").value = vl["Bánh lớn"]["Vật liệu"] || "";
                    document.getElementById("obLarge").value = vl["Bánh lớn"]["Ob"] || "";
                    document.getElementById("ochLarge").value = vl["Bánh lớn"]["Och"] || "";
                    document.getElementById("hbLarge").value = vl["Bánh lớn"]["HB"] || "";
                    document.getElementById("sizeLarge").value = vl["Bánh lớn"]["Kích thước"] || "";
                } else {
                    console.warn("vatLieuBoTruyen thiếu hoặc sai định dạng:", vl);
                }

                // Đầu vào ứng suất
                if (input) {
                    for (const key in input) {
                        const el = document.getElementById(key.toLowerCase());
                        if (el) el.value = input[key];
                    }
                }

                // Ứng suất tiếp xúc cho phép
                document.getElementById("ohAllow").value = data.ungSuatTiepXucChoPhep || "";
                document.getElementById("oh2Allow").value = data.ungSuatUonChoPhep || "";
                const capnhanh = data.tinhBanhRangCapNhanh;
                const capcham = data.tinhBanhRangCapCham;
                //console.log("CapNhanh1", capnhanh);
                renderGearFastTable(capnhanh);
                renderGearSlowTable(capcham);


                if (data.requiredMotorEfficiency && data.nsbSpeed) {
                    getFilteredCatalogs(data.requiredMotorEfficiency, data.nsbSpeed)
                        .then(data => {
                            console.log("Danh sách catalog phù hợp:", data);
                            renderCatalogTable(data);
                        })
                        .catch(error => console.error("Lỗi khi lọc catalog:", error));
                } else {
                    console.error("Lỗi: requiredMotorEfficiency hoặc requiredMotorSpeed không hợp lệ!", data);
                }

            })
            .catch(error => console.error("Lỗi khi lấy dữ liệu:", error));
    }


    // Đảm bảo CalGear đã được định nghĩa trước khi dùng
    document.addEventListener("DOMContentLoaded", function () {
        const formData = JSON.parse(localStorage.getItem("lastInputData"));

        if (!formData) {
            alert("Không tìm thấy dữ liệu từ trang trước!");
            return;
        }

        const loadN = formData.loadN || Math.round((formData.startupMoment / formData.loadMoment) * 100) / 100;
        console.log("loadN : ", loadN);
        CalGear(
            formData.transType,
            formData.force,
            formData.speed,
            formData.diameter,
            formData.serviceTime,
            loadN,
            formData.Torchlist,
            formData.tlist
        );
    });


    function renderChainTable(data) {
        const tableBody = document.getElementById("table-body");
        tableBody.innerHTML = ""; // Clear nội dung cũ

        const rows = [
            { label: "Số bánh răng dẫn", value: data.soRangDan ?? "chưa tính" },
            { label: "Số bánh răng bị dẫn", value: data.soRangBiDan ?? "chưa tính" },
            { label: "Bước xích (mm)", value: data.pitch ?? "chưa tính" },
            { label: "Chiều dài ống lót (mm)", value: data.ongLot ?? "chưa tính" },
            { label: "Đường kính chốt (mm)", value: data.duongKinhChot ?? "chưa tính" },
            { label: "Số mắt xích", value: data.soMatXich ?? "chưa tính" },
            { label: "Khoảng cách trục (mm)", value: data.shaftDistance ?? "chưa tính" },
            { label: "Đường kính vòng chia đĩa dẫn (mm)", value: data.diaDan ?? "chưa tính" },
            { label: "Đường kính vòng chia đĩa bị dẫn (mm)", value: data.diaBiDan ?? "chưa tính" },
            { label: "Lực tác dụng lên trục (N)", value: data.shaftForce ?? "chưa tính" },
            { label: "Vật liệu đĩa 1", value: data.vatLieuDia1 ?? "chưa tính" },
            { label: "Vật liệu đĩa 2", value: data.vatLieuDia2 ?? "chưa tính" },
        ];

        rows.forEach(row => {
            const tr = document.createElement("tr");
            tr.innerHTML = `
                <td><strong>${row.label}</strong></td>
                <td>${row.value}</td>
            `;
            tableBody.appendChild(tr);
        });
    }

    function renderGearFastTable(data) {
        console.log("CapNhanh", data);
        const tableBody = document.getElementById("gearfast-body");
        tableBody.innerHTML = ""; // Clear bảng cũ nếu có

        if (!data || typeof data !== "object") {
            console.warn("Dữ liệu CapNhanh không tồn tại hoặc sai định dạng:", data);
            const tr = document.createElement("tr");
            tr.innerHTML = `<td colspan="2">Không có dữ liệu để hiển thị</td>`;
            tableBody.appendChild(tr);
            return;
        }

        const normalizedData = {};
        Object.keys(data).forEach(key => {
            normalizedData[key.toLowerCase()] = data[key];
        });

        const rows = [
            { label: "Khoảng cách trục (mm)", value: `aw = ${normalizedData.aw ?? "chưa tính"}` },
            { label: "Modul pháp (mm)", value: `m = ${normalizedData.m ?? "chưa tính"}` },
            { label: "Chiều rộng vành răng (mm)", value: `bw = ${normalizedData.bw ?? "chưa tính"}` },
            { label: "Tỷ số truyền", value: `um = ${normalizedData.um ?? "chưa tính"}` },
            { label: "Góc nghiêng răng (°)", value: `β = ${normalizedData.gocnghieng ?? "chưa tính"}°` },
            { label: "Số răng bánh răng", value: `z₁ = ${normalizedData.z1 ?? "chưa tính"}, z₂ = ${normalizedData.z2 ?? "chưa tính"}` },
            { label: "Hệ số dịch chỉnh", value: `x₁ = ${normalizedData.x1 ?? "chưa tính"}, x₂ = ${normalizedData.x2 ?? "chưa tính"}` },
            { label: "Đường kính vòng chia (mm)", value: `d₁ = ${normalizedData.d1 ?? "chưa tính"}, d₂ = ${normalizedData.d2 ?? "chưa tính"}` },
            { label: "Đường kính đỉnh răng (mm)", value: `da₁ = ${normalizedData.da1 ?? "chưa tính"}, da₂ = ${normalizedData.da2 ?? "chưa tính"}` },
            { label: "Đường kính đáy răng (mm)", value: `df₁ = ${normalizedData.df1 ?? "chưa tính"}, df₂ = ${normalizedData.df2 ?? "chưa tính"}` },
            { label: "Đường kính vòng lăn (mm)", value: `dw₁ = ${normalizedData.dw1 ?? "chưa tính"}, dw₂ = ${normalizedData.dw2 ?? "chưa tính"}` }
        ];

        rows.forEach(row => {
            const tr = document.createElement("tr");
            tr.innerHTML = `
                <td><strong>${row.label}</strong></td>
                <td>${row.value}</td>
            `;
            tableBody.appendChild(tr);
        });
    }

    function renderGearSlowTable(data) {
        console.log("CapCham", data);
        const tableBody = document.getElementById("gearslow-body");
        tableBody.innerHTML = ""; // Clear bảng cũ nếu có

        if (!data || typeof data !== "object") {
            console.warn("Dữ liệu CapCham không tồn tại hoặc sai định dạng:", data);
            const tr = document.createElement("tr");
            tr.innerHTML = `<td colspan="2">Không có dữ liệu để hiển thị</td>`;
            tableBody.appendChild(tr);
            return;
        }

        const normalizedData = {};
        Object.keys(data).forEach(key => {
            normalizedData[key.toLowerCase()] = data[key];
        });

        const rows = [
            { label: "Khoảng cách trục (mm)", value: `aw = ${normalizedData.aw ?? "chưa tính"}` },
            { label: "Modul pháp (mm)", value: `m = ${normalizedData.m ?? "chưa tính"}` },
            { label: "Chiều rộng vành răng (mm)", value: `bw = ${normalizedData.bw ?? "chưa tính"}` },
            { label: "Tỷ số truyền", value: `um = ${normalizedData.um ?? "chưa tính"}` },
            { label: "Góc nghiêng răng (°)", value: `β = ${normalizedData.gocnghieng ?? "chưa tính"}°` },
            { label: "Số răng bánh răng", value: `z₁ = ${normalizedData.z1 ?? "chưa tính"}, z₂ = ${normalizedData.z2 ?? "chưa tính"}` },
            { label: "Hệ số dịch chỉnh", value: `x₁ = ${normalizedData.x1 ?? "chưa tính"}, x₂ = ${normalizedData.x2 ?? "chưa tính"}` },
            { label: "Đường kính vòng chia (mm)", value: `d₁ = ${normalizedData.d1 ?? "chưa tính"}, d₂ = ${normalizedData.d2 ?? "chưa tính"}` },
            { label: "Đường kính đỉnh răng (mm)", value: `da₁ = ${normalizedData.da1 ?? "chưa tính"}, da₂ = ${normalizedData.da2 ?? "chưa tính"}` },
            { label: "Đường kính đáy răng (mm)", value: `df₁ = ${normalizedData.df1 ?? "chưa tính"}, df₂ = ${normalizedData.df2 ?? "chưa tính"}` },
            { label: "Đường kính vòng lăn (mm)", value: `dw₁ = ${normalizedData.dw1 ?? "chưa tính"}, dw₂ = ${normalizedData.dw2 ?? "chưa tính"}` }
        ];

        rows.forEach(row => {
            const tr = document.createElement("tr");
            tr.innerHTML = `
                <td><strong>${row.label}</strong></td>
                <td>${row.value}</td>
            `;
            tableBody.appendChild(tr);
        });
    }





    let catalogs = null;
    function getFilteredCatalogs(requiredMotorEfficiency, NsbSpeed) {
        // Gọi API với 2 tham số
        fetch(`/api/filter-catalogs?requiredMotorEfficiency=${requiredMotorEfficiency}&NsbSpeed=${NsbSpeed}`)
            .then(response => {
                if (!response.ok) throw new Error("Lỗi khi gọi API Catalog!");
                return response.json();
            })
            .then(data => {
                console.log("Danh sách catalog phù hợp:", data);
                catalogs = data;
                renderCatalogTable(data);
            })
            .catch(error => console.error("Lỗi:", error));
    }

    function renderCatalogTable(catalogs) {
        console.log("Dữ liệu nhận được:", catalogs);

        let tableBody = document.getElementById("catalogTableBody");
        tableBody.innerHTML = ""; // Xóa dữ liệu cũ

        if (!catalogs || catalogs.length === 0) {
            tableBody.innerHTML = `<tr><td colspan="15" class="text-center">Không có động cơ phù hợp!</td></tr>`;
            return;
        }

        catalogs.forEach((item, index) => {
            // Kiểm tra nếu ImageUrls tồn tại và có ảnh
            let imagesHtml = "";
            if (item.image && Array.isArray(item.image) && item.image.length > 0) {
                imagesHtml = `<div class="d-flex flex-wrap">` +
                    item.image.slice(0, 3).map(url =>
                        `<img src="${url}" alt="Hình ảnh ${item.model}" class="img-thumbnail" width="70" height="70" style="margin: 2px; object-fit: cover;">`
                    ).join("") +
                    `</div>`;
            } else {
                imagesHtml = `<span class="text-muted">Không có ảnh</span>`;
            }

            let row = `<tr id="motor-${index}">
        <td>${index + 1}</td>
        <td>${imagesHtml}</td>
        <td>${item.model || "Không có dữ liệu"}</td>
        <td>${item.power || "Không có dữ liệu"}</td>
        <td>${item.voltage || "Không có dữ liệu"}</td>
        <td>${item.speed || "Không có dữ liệu"}</td>
        <td>${item.frameSize || "Không có dữ liệu"}</td>
        <td>${item.material || "Không có dữ liệu"}</td>
        <td>${item.protection || "Không có dữ liệu"}</td>
        <td>${item.standard || "Không có dữ liệu"}</td>
        <td>${item.mountingType || "Không có dữ liệu"}</td>
        <td>${item.shaftDiameter || "Không có dữ liệu"}</td>
        <td>${item.footprint || "Không có dữ liệu"}</td>
        <td>${item.technology || "Không có dữ liệu"}</td>
        <td>
            <a href="${item.url || "#"}" target="_blank" class="btn btn-primary btn-sm">Xem</a>
            <button class="btn btn-success btn-sm" onclick="selectMotor(${index})">Chọn</button>
        </td>
    </tr>`;

            tableBody.innerHTML += row;
        });
    }

    const fs = require('fs');
    const axios = require('axios');
    const path = require('path');

    // Tạo thư mục images nếu chưa có
    const imagesDir = path.join(__dirname, 'images');
    if (!fs.existsSync(imagesDir)) {
        fs.mkdirSync(imagesDir);
    }

    // chuyển image thành base64
    function blobToBase64(blob) {
        return new Promise((resolve) => {
            const reader = new FileReader();
            reader.onloadend = () => resolve(reader.result.split(',')[1]);
            reader.readAsDataURL(blob);
        });
    }

    // Hàm tải ảnh thành data base64
    async function downloadAndSaveImage(imageUrl) {
        try {
            // Tải ảnh từ URL
            const response = await fetch(imageUrl);
            if (!response.ok) {
                throw new Error(`Failed to fetch image from ${imageUrl}`);
            }

            // Tạo một tên file từ URL
            @* const imageName = path.basename(imageUrl);
            const imagePath = path.join(__dirname, 'images', imageName); *@

            @* // Lưu ảnh vào thư mục images
            const buffer = await response.buffer();
            await fs.promises.writeFile(imagePath, buffer);
            console.log(`Image saved to ${imagePath}`); *@
            const blob = await response.blob();
            const base64Image = await blobToBase64(blob);

            // Trả về stringDataBase64
            return base64Image;
        } catch (error) {
            console.error('Error downloading image:', error);
            throw error;
        }
    }

    async function selectMotor(index) {
        const selectedMotor = catalogs[index];

        // Kiểm tra và tải ảnh nếu cần
        if (selectedMotor.image && selectedMotor.image.length > 0) {
            const imageBase64s = [];

            // Tải và lưu tất cả các ảnh
            for (const imageUrl of selectedMotor.image) {
                try {
                    const imageData = await downloadAndSaveImage(imageUrl);
                    if (imageData) {
                        imageBase64s.push(imageData);  // lưu image thành base64 string
                    }
                } catch (error) {
                    console.error('Error downloading image:', error);
                }
            }

            // Cập nhật pdfContent.Motor với data ảnh đã tải về (chỉ dùng cho PDF)
            pdfContent.Motor = {
                ...selectedMotor,
                image: imageBase64s
            };
        } else {
            // Nếu không có ảnh, giữ nguyên dữ liệu cũ
            pdfContent.Motor = selectedMotor;
        }

        // Render lại bảng chỉ với 1 motor (dữ liệu gốc)
        renderCatalogTable([selectedMotor]);
    }

    function ExportPDF() {
        console.log(pdfContent);

        // Chuẩn bị dữ liệu gửi lên server

        fetch("/Input/ExportPdf", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(pdfContent)
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Lỗi mạng hoặc backend không phản hồi!");
                }
                return response.blob();
            })
            .then(blob => {
                // Gán dữ liệu vào các input field
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `GearboxDesign_${new Date().toISOString().slice(0, 10)}.pdf`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                window.URL.revokeObjectURL(url);
            })
            .catch(error => console.error("Lỗi khi lấy dữ liệu:", error));
    }

    //////////////////////////////////
</script>