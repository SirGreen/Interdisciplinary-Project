@{
    ViewData["Title"] = "Input Result";
}

<!-- /////////////////////////////////////////// -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Tính thông số động cơ</h4>
            </div><!-- end card header -->
            <div class="card-body align-items-center d-flex">
                <!-- With Controls -->
                <!-- Input with Placeholder -->
                <form action="javascript:void(0);">
                    <div class="row">

                        <!-- Hệ số quá tải (Tính tự động) -->
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="overloadFactor" class="form-label">Hệ số quá tải</label>
                                <input type="text" class="form-control" id="overloadFactor" readonly>
                            </div>
                        </div><!--end col-->

                        <div class="col-6"> <!--TinhHieuSuatChungN-->
                            <div class="mb-3">
                                <label for="overallEfficiency" class="form-label">Hiệu suất chung</label>
                                <input type="number" class="form-control" id="overallEfficiency" readonly>
                            </div>
                        </div><!--end col-->

                        <div class="col-6">
                            <div class="mb-3"><!--TinhCongSuatCanThietPct(double N)-->
                                <label for="requiredMotorEfficiency" class="form-label">Công suất cần thiết của động
                                    cơ</label>
                                <input type="number" class="form-control" id="requiredMotorEfficiency" readonly>
                            </div>
                        </div><!--end col-->

                        <div class="col-6">
                            <div class="mb-3"><!--TinhTocDoQuayCanThietNlv()-->
                                <label for="requiredMotorSpeed" class="form-label">Số vòng quay của trục công
                                    tác</label>
                                <input type="number" class="form-control" id="requiredMotorSpeed" readonly>
                            </div>
                        </div><!--end col-->

                        <div class="col-6">
                            <div class="mb-3"><!--TinhTocDoSoBoNsb-->
                                <label for="NsbSpeed" class="form-label">Tốc độ quay cần thiết sơ bộ của động cơ</label>
                                <input type="number" class="form-control" id="NsbSpeed" readonly>
                            </div>
                        </div><!--end col-->

                        <div class="col-6">
                            <div class="mb-3"><!--TinhTiSoTruyenUn(double Ndc,double Nlv)-->
                                <label for="Un" class="form-label">Tỷ số truyền của hệ dẫn động (bộ truyền xích)</label>
                                <input type="number" class="form-control" id="Un" readonly>
                            </div>
                        </div><!--end col-->

                        <div class="col-6">
                            <div class="mb-3">
                                <label for="MomenSoVongQuay" class="form-label">Momen Số Vòng Quay</label>
                                <textarea class="form-control" id="MomenSoVongQuay" rows="4" readonly></textarea>
                            </div>
                        </div>




                    </div><!--end row-->
                </form>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Danh sách động cơ phù hợp</h4>
            </div><!-- end card header -->
            <div class="card-body align-items-center d-flex">
                <div style="max-height: 500px; overflow-y: auto;">
                    <table class="table table-bordered table-hover">
                        <thead class="table-dark" style="position: sticky; top: 0; z-index: 1;">
                            <tr>
                                <th style="width: 50px;">STT</th>
                                <th style="width: 150px;">Hình ảnh</th>
                                <th>Brand</th>
                                <th>Category</th>
                                <th>Product Name</th>
                                <th>Motor Type</th>
                                <th>Frame Size</th>
                                <th>Output (kW)</th>
                                <th>Output (HP)</th>
                                <th>Weight (kg)</th>
                                <th>Chi tiết</th>
                            </tr>
                        </thead>
                        <tbody id="catalogTableBody">
                            <!-- Dữ liệu động cơ sẽ được render ở đây -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal hiển thị chi tiết -->
<div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detailsModalLabel">Chi tiết động cơ</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <h6>Thông số cơ bản</h6>
                        <table class="table table-sm">
                            <tr>
                                <th>Brand:</th>
                                <td id="detail-brand"></td>
                            </tr>
                            <tr>
                                <th>Category:</th>
                                <td id="detail-category"></td>
                            </tr>
                            <tr>
                                <th>Product Name:</th>
                                <td id="detail-product-name"></td>
                            </tr>
                            <tr>
                                <th>Motor Type:</th>
                                <td id="detail-motor-type"></td>
                            </tr>
                            <tr>
                                <th>Frame Size:</th>
                                <td id="detail-frame-size"></td>
                            </tr>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h6>Thông số kỹ thuật</h6>
                        <table class="table table-sm">
                            <tr>
                                <th>Output (kW):</th>
                                <td id="detail-output-kw"></td>
                            </tr>
                            <tr>
                                <th>Output (HP):</th>
                                <td id="detail-output-hp"></td>
                            </tr>
                            <tr>
                                <th>Full Load RPM:</th>
                                <td id="detail-full-load-rpm"></td>
                            </tr>
                            <tr>
                                <th>Weight (kg):</th>
                                <td id="detail-weight"></td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-md-6">
                        <h6>Thông số dòng điện</h6>
                        <table class="table table-sm">
                            <tr>
                                <th>Current (380V):</th>
                                <td id="detail-current-380v"></td>
                            </tr>
                            <tr>
                                <th>Current (400V):</th>
                                <td id="detail-current-400v"></td>
                            </tr>
                            <tr>
                                <th>Current (415V):</th>
                                <td id="detail-current-415v"></td>
                            </tr>
                            <tr>
                                <th>LRC Current:</th>
                                <td id="detail-current-lrc"></td>
                            </tr>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h6>Hiệu suất</h6>
                        <table class="table table-sm">
                            <tr>
                                <th>Efficiency (1/2):</th>
                                <td id="detail-efficiency-1-2"></td>
                            </tr>
                            <tr>
                                <th>Efficiency (3/4):</th>
                                <td id="detail-efficiency-3-4"></td>
                            </tr>
                            <tr>
                                <th>Efficiency (Full):</th>
                                <td id="detail-efficiency-full"></td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-md-6">
                        <h6>Hệ số công suất</h6>
                        <table class="table table-sm">
                            <tr>
                                <th>Power Factor (1/2):</th>
                                <td id="detail-power-factor-1-2"></td>
                            </tr>
                            <tr>
                                <th>Power Factor (3/4):</th>
                                <td id="detail-power-factor-3-4"></td>
                            </tr>
                            <tr>
                                <th>Power Factor (Full):</th>
                                <td id="detail-power-factor-full"></td>
                            </tr>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h6>Mô men xoắn</h6>
                        <table class="table table-sm">
                            <tr>
                                <th>Breakdown Torque:</th>
                                <td id="detail-torque-break-down"></td>
                            </tr>
                            <tr>
                                <th>Full Load Torque:</th>
                                <td id="detail-torque-full"></td>
                            </tr>
                            <tr>
                                <th>Locked Rotor Torque:</th>
                                <td id="detail-torque-locked-rotor"></td>
                            </tr>
                            <tr>
                                <th>Pull-up Torque:</th>
                                <td id="detail-torque-pull-up"></td>
                            </tr>
                            <tr>
                                <th>Rotor GD²:</th>
                                <td id="detail-torque-rotor-gd2"></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Tính thông số bộ truyền xích</h4>
            </div><!-- end card header -->
            <div class="card-body align-items-center d-flex">
                <!-- With Controls -->
                <!-- Input with Placeholder -->
                <form action="javascript:void(0);">
                    <div class="row">
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="pitch" class="form-label">Bước xích (p) [mm]</label>
                                <input type="number" class="form-control" id="pitch" readonly>
                            </div>
                        </div>

                        <!-- Khoảng cách trục (KhoangCachTruc_aStan) -->
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="shaftDistance" class="form-label">Khoảng cách trục [mm]</label>
                                <input type="number" class="form-control" id="shaftDistance" readonly>
                            </div>
                        </div>

                        <!-- Kết luận an toàn xích (XichAnToan) -->
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="chainSafe" class="form-label">Kết luận an toàn xích</label>
                                <input type="text" class="form-control" id="chainSafe" readonly>
                            </div>
                        </div>

                        <!-- Trạng thái đường kính đĩa xích (DuongKinhDiaXich_TinhToan) -->
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="diskDiameterCalc" class="form-label">Tính toán đường kính đĩa xích</label>
                                <input type="text" class="form-control" id="diskDiameterCalc" readonly>
                            </div>
                        </div>

                        <!-- Độ bền tiếp xúc (DoBenTiepXuc_Oh) -->
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="contactStrength" class="form-label">Độ bền tiếp xúc [MPa]</label>
                                <input type="number" class="form-control" id="contactStrength" readonly>
                            </div>
                        </div>

                        <!-- Lực tác dụng lên trục (LucTacDungTrenTruc_Frk) -->
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="shaftForce" class="form-label">Lực tác dụng lên trục [N]</label>
                                <input type="number" class="form-control" id="shaftForce" readonly>
                            </div>
                        </div>
                    </div><!--end row-->
                </form>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
</div>

<!--Hiển thị kq bộ truyền xích -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Thông số bộ truyền xích</h4>
            </div>
            <div class="card-body align-items-center d-flex">
                <div style="max-height: 500px; flex-grow: 1;">
                    <table class="table table-bordered table-hover w-100 mb-3" id="chain-table">
                        <thead class="table-dark" style="position: sticky; top: 0; z-index: 1;">
                            <tr>
                                <th>Thông số</th>
                                <th>Giá trị</th>
                            </tr>
                        </thead>
                        <tbody id="table-body">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Tính toán bộ truyền bánh răng</h4>
            </div>
            <div class="card-body">
                <form action="javascript:void(0);" class="w-100">
                    <div class="row">
                        <!-- Bánh nhỏ -->
                        <div class="col-6">
                            <h5>Bánh nhỏ</h5>
                            <div class="mb-2"><label>Vật liệu</label><input id="matSmall" class="form-control" readonly>
                            </div>
                            <div class="mb-2"><label>Ob [MPa]</label><input id="obSmall" type="number"
                                    class="form-control" readonly></div>
                            <div class="mb-2"><label>Och [MPa]</label><input id="ochSmall" type="number"
                                    class="form-control" readonly></div>
                            <div class="mb-2"><label>HB</label><input id="hbSmall" class="form-control" readonly></div>
                            <div class="mb-2"><label>Kích thước S</label><input id="sizeSmall" class="form-control"
                                    readonly></div>
                        </div>

                        <!-- Bánh lớn -->
                        <div class="col-6">
                            <h5>Bánh lớn</h5>
                            <div class="mb-2"><label>Vật liệu</label><input id="matLarge" class="form-control" readonly>
                            </div>
                            <div class="mb-2"><label>Ob [MPa]</label><input id="obLarge" type="number"
                                    class="form-control" readonly></div>
                            <div class="mb-2"><label>Och [MPa]</label><input id="ochLarge" type="number"
                                    class="form-control" readonly></div>
                            <div class="mb-2"><label>HB</label><input id="hbLarge" class="form-control" readonly></div>
                            <div class="mb-2"><label>Kích thước</label><input id="sizeLarge" class="form-control"
                                    readonly></div>
                        </div>

                        <!-- Đầu vào ứng suất -->
                        <div class="col-12 mt-3">
                            <h5>Đầu vào ứng suất</h5>
                            <div class="row">
                                <div class="col-4 mb-2"><label>Ohlim1</label><input id="ohlim1" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Ohlim2</label><input id="ohlim2" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Sh</label><input id="sh" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Oflim1</label><input id="oflim1" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Oflim2</label><input id="oflim2" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Sf</label><input id="sf" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>HB1</label><input id="hb1" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>HB2</label><input id="hb2" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Nho1</label><input id="nho1" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Nho2</label><input id="nho2" type="number"
                                        class="form-control" readonly></div>
                                <div class="col-4 mb-2"><label>Nfo</label><input id="nfo" type="number"
                                        class="form-control" readonly></div>
                            </div>
                        </div>

                        <!-- Ứng suất cho phép -->
                        <div class="col-4 mt-3">
                            <label>Ứng suất tiếp xúc cho phép [MPa]</label>
                            <input id="ohAllow" type="number" class="form-control" readonly>
                        </div>

                        <div class="col-4 mt-3">
                            <label>Ứng suất uốn cho phép [MPa]</label>
                            <input id="oh2Allow" type="number" class="form-control" readonly>
                        </div>

                        <div class="col-4 mt-3">
                            <label>Kiểm tra bôi trơn</label>
                            <input id="boitron" type="text" class="form-control" readonly>
                        </div>


                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<!-- TODO b20 cấp nhanh -->
<!--Hiển thị kq bánh răng -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Thông số bánh răng cấp nhanh</h4>
            </div>
            <div class="card-body align-items-center d-flex">
                <div style="max-height: 500px; flex-grow: 1;">
                    <table class="table table-bordered table-hover w-100" id="fastgear-table">
                        <thead class="table-dark" style="position: sticky; top: 0; z-index: 1;">
                            <tr>
                                <th>Thông số</th>
                                <th>Giá trị</th>
                            </tr>
                        </thead>
                        <tbody id="gearfast-body">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- TODO b21 cấp chậm -->
<!--Hiển thị kq bánh răng -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Thông số bánh răng cấp chậm</h4>
            </div>
            <div class="card-body align-items-center d-flex">
                <div style="max-height: 500px; flex-grow: 1;">
                    <table class="table table-bordered table-hover w-100" id="slowgear-table">
                        <thead class="table-dark" style="position: sticky; top: 0; z-index: 1;">
                            <tr>
                                <th>Thông số</th>
                                <th>Giá trị</th>
                            </tr>
                        </thead>
                        <tbody id="gearslow-body">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- /////////////////////////////////////////// -->
<div class="row">
    <div class="w-100 text-center my-3">
        <button class="btn btn-primary" onclick="ExportPDF()">Export</button>
    </div>
</div>
<!-- //////////////////////////////////////////////// -->


</div>

<script>
    ///////////////////////////////////////////////////////////////

    function CalGear(transType, force, speed, diameter, serviceTime, loadN, Torchlist, tlist) {
        console.log("Gọi CalGear");

        if (!transType || transType === "Chọn bộ truyền") {
            console.warn("Chưa chọn bộ truyền, gán mặc định là 'chain'");
            transType = "chain";
        }

        const requestData = {
            transType,
            force,
            speed,
            diameter,
            serviceTime,
            loadN,
            Torchlist,
            tlist
        };

        console.log("Gọi CalGear với bộ truyền:", requestData);

        fetch("/Input/CalGear", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(requestData)
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Lỗi mạng hoặc backend không phản hồi!");
                }
                return response.json();
            })
            .then(data => {
                pdfContent = data;
                console.log("data: ", data);

                // thông số động cơ
                document.getElementById("overloadFactor").value = data.overloadFactor || "";
                document.getElementById("overallEfficiency").value = data.overallEfficiency || "";
                document.getElementById("requiredMotorEfficiency").value = data.requiredMotorEfficiency || "";
                document.getElementById("requiredMotorSpeed").value = data.requiredMotorSpeed || "";
                document.getElementById("NsbSpeed").value = data.nsbSpeed || "";
                document.getElementById("Un").value = data.un || "";
                document.getElementById("MomenSoVongQuay").value = data.momenSoVongQuay || "";

                // thông số xích
                document.getElementById("pitch").value = data.pitch || "";
                document.getElementById("shaftDistance").value = data.shaftDistance || "";
                document.getElementById("chainSafe").value = data.chainSafe ? "Đạt" : "Không đạt";
                let chainSafeEl = document.getElementById("chainSafe");
                chainSafeEl.innerText = data.chainSafe ? "Đạt" : "Không đạt";

                // Xóa class cũ trước
                chainSafeEl.classList.remove("text-success", "text-danger");

                // Thêm class màu tương ứng
                if (data.chainSafe) {
                    chainSafeEl.classList.add("text-success");
                } else {
                    chainSafeEl.classList.add("text-danger");
                }
                document.getElementById("diskDiameterCalc").value = data.diskDiameterCalc || "";
                document.getElementById("contactStrength").value = data.contactStrength || "";
                document.getElementById("shaftForce").value = data.shaftForce || "";

                // gọi hàm hiển thị bảng xích
                renderChainTable(data);

                // Sửa tên đúng: vatLieuBoTruyen (viết thường)
                const vl = data.vatLieuBoTruyen;
                const input = data.dauVaoUngSuat;

                if (vl && vl["Bánh nhỏ"] && vl["Bánh lớn"]) {
                    document.getElementById("matSmall").value = vl["Bánh nhỏ"]["Vật liệu"] || "";
                    document.getElementById("obSmall").value = vl["Bánh nhỏ"]["Ob"] || "";
                    document.getElementById("ochSmall").value = vl["Bánh nhỏ"]["Och"] || "";
                    document.getElementById("hbSmall").value = vl["Bánh nhỏ"]["HB"] || "";
                    document.getElementById("sizeSmall").value = vl["Bánh nhỏ"]["Kích thước S"] || "";

                    document.getElementById("matLarge").value = vl["Bánh lớn"]["Vật liệu"] || "";
                    document.getElementById("obLarge").value = vl["Bánh lớn"]["Ob"] || "";
                    document.getElementById("ochLarge").value = vl["Bánh lớn"]["Och"] || "";
                    document.getElementById("hbLarge").value = vl["Bánh lớn"]["HB"] || "";
                    document.getElementById("sizeLarge").value = vl["Bánh lớn"]["Kích thước"] || "";
                } else {
                    console.warn("vatLieuBoTruyen thiếu hoặc sai định dạng:", vl);
                }

                // Đầu vào ứng suất
                if (input) {
                    for (const key in input) {
                        const el = document.getElementById(key.toLowerCase());
                        if (el) el.value = input[key];
                    }
                }

                // Ứng suất tiếp xúc cho phép
                document.getElementById("ohAllow").value = data.ungSuatTiepXucChoPhep || "";
                document.getElementById("oh2Allow").value = data.ungSuatUonChoPhep || "";
                const capnhanh = data.tinhBanhRangCapNhanh;
                const capcham = data.tinhBanhRangCapCham;
                //console.log("CapNhanh1", capnhanh);
                renderGearFastTable(capnhanh);
                renderGearSlowTable(capcham);

                const ktraboitron = data.kiemTraBoiTron; // biến bool
                const trangThaiBoiTron = ktraboitron ? "Thỏa điều kiện bôi trơn" : "Không thỏa điều kiện bôi trơn";
                document.getElementById("boitron").value = trangThaiBoiTron;
                let boiTronEl = document.getElementById("boitron");
                boiTronEl.innerText = data.chainSafe ? "Thỏa điều kiện bôi trơn" : "Không thỏa điều kiện bôi trơn";

                // Xóa class cũ trước
                boiTronEl.classList.remove("text-success", "text-danger");

                // Thêm class màu tương ứng
                if (data.kiemTraBoiTron) {
                    boiTronEl.classList.add("text-success");
                } else {
                    boiTronEl.classList.add("text-danger");
                }


                if (data.requiredMotorEfficiency && data.nsbSpeed) {
                    getFilteredCatalogs(data.requiredMotorEfficiency, data.nsbSpeed)
                        .then(data => {
                            console.log("Danh sách catalog phù hợp:", data);
                            renderCatalogTable(data);
                        })
                        .catch(error => console.error("Lỗi khi lọc catalog:", error));
                } else {
                    console.error("Lỗi: requiredMotorEfficiency hoặc requiredMotorSpeed không hợp lệ!", data);
                }

            })
            .catch(error => console.error("Lỗi khi lấy dữ liệu:", error));
    }


    // Đảm bảo CalGear đã được định nghĩa trước khi dùng
    document.addEventListener("DOMContentLoaded", function () {
        const formData = JSON.parse(localStorage.getItem("lastInputData"));

        if (!formData) {
            alert("Không tìm thấy dữ liệu từ trang trước!");
            return;
        }

        const loadN = formData.loadN || Math.round((formData.startupMoment / formData.loadMoment) * 100) / 100;
        console.log("loadN : ", loadN);
        CalGear(
            formData.transType,
            formData.force,
            formData.speed,
            formData.diameter,
            formData.serviceTime,
            loadN,
            formData.Torchlist,
            formData.tlist
        );
    });


    function renderChainTable(data) {
        const tableBody = document.getElementById("table-body");
        tableBody.innerHTML = ""; // Clear nội dung cũ

        const rows = [
            { label: "Số bánh răng dẫn", value: data.soRangDan ?? "chưa tính" },
            { label: "Số bánh răng bị dẫn", value: data.soRangBiDan ?? "chưa tính" },
            { label: "Bước xích (mm)", value: data.pitch ?? "chưa tính" },
            { label: "Chiều dài ống lót (mm)", value: data.ongLot ?? "chưa tính" },
            { label: "Đường kính chốt (mm)", value: data.duongKinhChot ?? "chưa tính" },
            { label: "Số mắt xích", value: data.soMatXich ?? "chưa tính" },
            { label: "Khoảng cách trục (mm)", value: data.shaftDistance ?? "chưa tính" },
            { label: "Đường kính vòng chia đĩa dẫn (mm)", value: data.diaDan ?? "chưa tính" },
            { label: "Đường kính vòng chia đĩa bị dẫn (mm)", value: data.diaBiDan ?? "chưa tính" },
            { label: "Lực tác dụng lên trục (N)", value: data.shaftForce ?? "chưa tính" },
            { label: "Vật liệu đĩa 1", value: data.vatLieuDia1 ?? "chưa tính" },
            { label: "Vật liệu đĩa 2", value: data.vatLieuDia2 ?? "chưa tính" },
        ];

        rows.forEach(row => {
            const tr = document.createElement("tr");
            tr.innerHTML = `
                <td class="mb-2"><strong>${row.label}</strong></td>
                <td>${row.value}</td>
            `;
            tableBody.appendChild(tr);
        });
    }

    function renderGearFastTable(data) {
        console.log("CapNhanh", data);
        const tableBody = document.getElementById("gearfast-body");
        tableBody.innerHTML = ""; // Xóa bảng cũ

        if (!data || typeof data !== "object" || Object.keys(data).length === 0) {
            console.warn("Dữ liệu CapNhanh không hợp lệ:", data);
            const tr = document.createElement("tr");
            tr.innerHTML = `<td colspan="2">Không có dữ liệu để hiển thị</td>`;
            tableBody.appendChild(tr);
            return;
        }

        // Chuyển tất cả key về lowercase để tránh lỗi key viết hoa/thường khác nhau
        const normalizedData = {};
        for (const key in data) {
            if (data.hasOwnProperty(key)) {
                normalizedData[key.toLowerCase()] = data[key];
            }
        }

        const getValue = (key, unit = "", suffix = "") =>
            normalizedData[key] !== undefined ? `${normalizedData[key]}${unit}` : `chưa tính${suffix}`;

        const rows = [
            { label: "Khoảng cách trục (mm)", value: `aw = ${getValue("aw")}` },
            { label: "Modul pháp (mm)", value: `m = ${getValue("m")}` },
            { label: "Chiều rộng vành răng (mm)", value: `bw = ${getValue("bw")}` },
            { label: "Tỷ số truyền", value: `um = ${getValue("um")}` },
            { label: "Góc nghiêng răng (°)", value: `β = ${getValue("gocnghieng", "°")}` },
            { label: "Số răng bánh răng", value: `z₁ = ${getValue("z1")}, z₂ = ${getValue("z2")}` },
            { label: "Hệ số dịch chỉnh", value: `x₁ = ${getValue("x1")}, x₂ = ${getValue("x2")}` },
            { label: "Đường kính vòng chia (mm)", value: `d₁ = ${getValue("d1")}, d₂ = ${getValue("d2")}` },
            { label: "Đường kính đỉnh răng (mm)", value: `da₁ = ${getValue("da1")}, da₂ = ${getValue("da2")}` },
            { label: "Đường kính đáy răng (mm)", value: `df₁ = ${getValue("df1")}, df₂ = ${getValue("df2")}` },
            { label: "Đường kính vòng lăn (mm)", value: `dw₁ = ${getValue("dw1")}, dw₂ = ${getValue("dw2")}` }
        ];

        for (const row of rows) {
            const tr = document.createElement("tr");
            tr.innerHTML = `
                <td><strong>${row.label}</strong></td>
                <td>${row.value}</td>
            `;
            tableBody.appendChild(tr);
        }
    }


    function renderGearSlowTable(data) {
        console.log("CapCham", data);
        const tableBody = document.getElementById("gearslow-body");
        tableBody.innerHTML = ""; // Xóa bảng cũ

        if (!data || typeof data !== "object" || Object.keys(data).length === 0) {
            console.warn("Dữ liệu CapCham không hợp lệ:", data);
            const tr = document.createElement("tr");
            tr.innerHTML = `<td colspan="2">Không có dữ liệu để hiển thị</td>`;
            tableBody.appendChild(tr);
            return;
        }

        const normalizedData = {};
        for (const key in data) {
            if (data.hasOwnProperty(key)) {
                normalizedData[key.toLowerCase()] = data[key];
            }
        }

        const getValue = (key, unit = "", suffix = "") =>
            normalizedData[key] != null ? `${normalizedData[key]}${unit}` : `Chưa có${suffix}`;

        const rows = [
            { label: "Khoảng cách trục (mm)", value: `aw = ${getValue("aw")}` },
            { label: "Modul pháp (mm)", value: `m = ${getValue("m")}` },
            { label: "Chiều rộng vành răng (mm)", value: `bw = ${getValue("bw")}` },
            { label: "Tỷ số truyền", value: `um = ${getValue("um")}` },
            { label: "Góc nghiêng răng (°)", value: `β = ${getValue("gocnghieng", "°")}` },
            { label: "Số răng bánh răng", value: `z₁ = ${getValue("z1")}, z₂ = ${getValue("z2")}` },
            { label: "Hệ số dịch chỉnh", value: `x₁ = ${getValue("x1")}, x₂ = ${getValue("x2")}` },
            { label: "Đường kính vòng chia (mm)", value: `d₁ = ${getValue("d1")}, d₂ = ${getValue("d2")}` },
            { label: "Đường kính đỉnh răng (mm)", value: `da₁ = ${getValue("da1")}, da₂ = ${getValue("da2")}` },
            { label: "Đường kính đáy răng (mm)", value: `df₁ = ${getValue("df1")}, df₂ = ${getValue("df2")}` },
            { label: "Đường kính vòng lăn (mm)", value: `dw₁ = ${getValue("dw1")}, dw₂ = ${getValue("dw2")}` }
        ];

        for (const row of rows) {
            const tr = document.createElement("tr");
            tr.innerHTML = `
                <td><strong>${row.label}</strong></td>
                <td>${row.value}</td>
            `;
            tableBody.appendChild(tr);
        }
    }





    let catalogs = null;
    function getFilteredCatalogs(requiredMotorEfficiency, NsbSpeed) {
        // Gọi API với 2 tham số
        fetch(`/api/filter-catalogs?requiredMotorEfficiency=${requiredMotorEfficiency}&NsbSpeed=${NsbSpeed}`)
            .then(response => {
                if (!response.ok) throw new Error("Lỗi khi gọi API Catalog!");
                return response.json();
            })
            .then(data => {
                console.log("Danh sách catalog phù hợp:", data);
                catalogs = data;
                renderCatalogTable(data);
            })
            .catch(error => console.error("Lỗi:", error));
    }

    function renderCatalogTable(motors) {
        console.log("Dữ liệu nhận được:", motors);

        let tableBody = document.getElementById("catalogTableBody");
        tableBody.innerHTML = ""; // Xóa dữ liệu cũ

        if (!motors || motors.length === 0) {
            tableBody.innerHTML = `<tr><td colspan="27" class="text-center">Không có động cơ phù hợp!</td></tr>`;
            return;
        }

        motors.forEach((motor, index) => {
            // Kiểm tra nếu Image tồn tại
            let imagesHtml = "";
            if (motor.image_url) {
                imagesHtml = `<div class="d-flex flex-wrap">
                    <img src="${motor.image_url}" alt="Hình ảnh ${motor.product_name}" class="img-thumbnail" width="70" height="70" style="margin: 2px; object-fit: cover;">
                </div>`;
            } else {
                imagesHtml = `<span class="text-muted">Không có ảnh</span>`;
            }

            let row = `<tr id="motor-${index}">
                <td>${index + 1}</td>
                <td>${imagesHtml}</td>
                <td>${motor.brand || "Không có dữ liệu"}</td>
                <td>${motor.category || "Không có dữ liệu"}</td>
                <td>${motor.product_name || "Không có dữ liệu"}</td>
                <td>${motor.motor_type || "Không có dữ liệu"}</td>
                <td>${motor.frame_size || "Không có dữ liệu"}</td>
                <td>${motor.output_kw || "Không có dữ liệu"}</td>
                <td>${motor.output_hp || "Không có dữ liệu"}</td>
                <td>${motor.weight_kg || "Không có dữ liệu"}</td>
                <td class="d-flex gap-4 mt-4 align-items-center">
                    <button class="btn view-button btn-sm" 
                            onclick='showDetails(${JSON.stringify(motor)})'
                            data-bs-toggle="tooltip" 
                            title="Xem chi tiết">
                        <i class="fas fa-info-circle"></i>
                    </button>

                    <button class="btn check-button btn-sm select-motor-btn" 
                            onclick="selectMotor(${index})" 
                            style="display: none;"
                            data-bs-toggle="tooltip" 
                            title="Chọn động cơ này">
                        <i class="fas fa-check"></i>
                    </button>
                </td>


            </tr>`;


            tableBody.innerHTML += row;
        });

        // Hiển thị nút chọn cho tất cả các động cơ
        document.querySelectorAll('.select-motor-btn').forEach(btn => {
            btn.style.display = 'inline-block';
        });
    }

    function showDetails(motor) {
        // Cập nhật thông tin trong modal
        document.getElementById('detail-brand').textContent = motor.brand || '-';
        document.getElementById('detail-category').textContent = motor.category || '-';
        document.getElementById('detail-product-name').textContent = motor.product_name || '-';
        document.getElementById('detail-motor-type').textContent = motor.motor_type || '-';
        document.getElementById('detail-frame-size').textContent = motor.frame_size || '-';
        document.getElementById('detail-output-kw').textContent = motor.output_kw || '-';
        document.getElementById('detail-output-hp').textContent = motor.output_hp || '-';
        document.getElementById('detail-full-load-rpm').textContent = motor.full_load_rpm || '-';
        document.getElementById('detail-weight').textContent = motor.weight_kg || '-';
        document.getElementById('detail-current-380v').textContent = motor.current_380v || '-';
        document.getElementById('detail-current-400v').textContent = motor.current_400v || '-';
        document.getElementById('detail-current-415v').textContent = motor.current_415v || '-';
        document.getElementById('detail-current-lrc').textContent = motor.current_lrc || '-';
        document.getElementById('detail-efficiency-1-2').textContent = motor.efficiency_1_2 || '-';
        document.getElementById('detail-efficiency-3-4').textContent = motor.efficiency_3_4 || '-';
        document.getElementById('detail-efficiency-full').textContent = motor.efficiency_full || '-';
        document.getElementById('detail-power-factor-1-2').textContent = motor.power_factor_1_2 || '-';
        document.getElementById('detail-power-factor-3-4').textContent = motor.power_factor_3_4 || '-';
        document.getElementById('detail-power-factor-full').textContent = motor.power_factor_full || '-';
        document.getElementById('detail-torque-break-down').textContent = motor.torque_break_down || '-';
        document.getElementById('detail-torque-full').textContent = motor.torque_full || '-';
        document.getElementById('detail-torque-locked-rotor').textContent = motor.torque_locked_rotor || '-';
        document.getElementById('detail-torque-pull-up').textContent = motor.torque_pull_up || '-';
        document.getElementById('detail-torque-rotor-gd2').textContent = motor.torque_rotor_gd2 || '-';

        // Hiển thị modal
        var detailsModal = new bootstrap.Modal(document.getElementById("detailsModal"));
        detailsModal.show();
    }

    @* const fs = require('fs'); *@
    const axios = require('axios');
    const path = require('path');

    // Tạo thư mục images nếu chưa có
    const imagesDir = path.join(__dirname, 'images');
    if (!fs.existsSync(imagesDir)) {
        fs.mkdirSync(imagesDir);
    }

    // chuyển image thành base64
    function blobToBase64(blob) {
        return new Promise((resolve) => {
            const reader = new FileReader();
            reader.onloadend = () => resolve(reader.result.split(',')[1]);
            reader.readAsDataURL(blob);
        });
    }

    // Hàm tải ảnh thành data base64
    async function downloadAndSaveImage(imageUrl) {
        try {
            // Tải ảnh từ URL
            const response = await fetch(imageUrl);
            if (!response.ok) {
                throw new Error(`Failed to fetch image from ${imageUrl}`);
            }

            // Tạo một tên file từ URL
            @* const imageName = path.basename(imageUrl);
            const imagePath = path.join(__dirname, 'images', imageName); *@

                @* // Lưu ảnh vào thư mục images
            const buffer = await response.buffer();
            await fs.promises.writeFile(imagePath, buffer);
            console.log(`Image saved to ${imagePath}`); *@
            const blob = await response.blob();
            const base64Image = await blobToBase64(blob);

            // Trả về stringDataBase64
            return base64Image;
        } catch (error) {
            console.error('Error downloading image:', error);
            throw error;
        }
    }

    async function selectMotor(index) {
        console.log("===== Starting selectMotor =====");
        const selectedMotor = catalogs[index];
        console.log("Selected motor:", selectedMotor);

        // Kiểm tra và tải ảnh nếu cần
        if (selectedMotor.image_url) {
            console.log("Found image URL:", selectedMotor.image_url);
            try {
                console.log("Attempting to download image...");
                const imageData = await downloadAndSaveImage(selectedMotor.image_url);
                console.log("Image downloaded successfully, base64 length:", imageData?.length);

                if (imageData) {
                    console.log("Creating pdfContent.Motor with image data");
                    // Cập nhật pdfContent.Motor với data ảnh đã tải về (chỉ dùng cho PDF)
                    pdfContent.Motor = {
                        ...selectedMotor,
                        Image: imageData // Lưu ảnh vào Image (viết hoa)
                    };
                    console.log("pdfContent.Motor updated with image data");
                }
            } catch (error) {
                console.error('Error downloading image:', error);
                console.log("Falling back to original motor data without image");
                // Nếu có lỗi khi tải ảnh, vẫn giữ nguyên dữ liệu motor
                pdfContent.Motor = selectedMotor;
            }
        } else {
            console.log("No image found in selected motor");
            // Nếu không có ảnh, giữ nguyên dữ liệu cũ
            pdfContent.Motor = selectedMotor;
        }

        console.log("Final pdfContent.Motor:", pdfContent.Motor);
        // Render lại bảng chỉ với 1 motor (dữ liệu gốc)
        renderCatalogTable([selectedMotor]);

        // Ẩn tất cả các nút chọn
        document.querySelectorAll('.select-motor-btn').forEach(btn => {
            btn.style.display = 'none';
        });

        console.log("===== Finished selectMotor =====");
    }

    function ExportPDF() {
        console.log("Starting PDF export process...");
        console.log("PDF Content:", pdfContent);

        // Kiểm tra dữ liệu trước khi gửi
        if (!pdfContent) {
            alert("Không có dữ liệu để xuất PDF!");
            return;
        }

        // Kiểm tra các dữ liệu bắt buộc
        const missingData = [];

        // Kiểm tra thông số motor
        if (!pdfContent.Motor) {
            missingData.push("Thông tin động cơ");
        } else {
            if (!pdfContent.Motor.product_name) missingData.push("Tên sản phẩm động cơ");
            if (!pdfContent.Motor.frame_size) missingData.push("Kích thước khung động cơ");
            if (!pdfContent.Motor.Image) missingData.push("Hình ảnh động cơ");
        }

        // Nếu có dữ liệu thiếu, hiển thị thông báo
        if (missingData.length > 0) {
            const message = "Thiếu các thông tin sau:\n" + missingData.join("\n");
            alert(message);
            console.error("Missing data:", missingData);
            return;
        }

        // Chuẩn bị và validate dữ liệu
        const exportData = {
            ...pdfContent,
            // Đảm bảo các trường số là số
            contactStrength: parseInt(pdfContent.contactStrength) || 0,
            pitch: parseFloat(pdfContent.pitch) || 0,
            shaftDistance: parseFloat(pdfContent.shaftDistance) || 0,
            shaftForce: parseFloat(pdfContent.shaftForce) || 0,
            // Chuyển chainSafe thành boolean
            chainSafe: pdfContent.chainSafe === "Đạt" || pdfContent.chainSafe === true,
            // Đảm bảo các trường string là string
            diskDiameterCalc: String(pdfContent.diskDiameterCalc || ""),
            // Thêm các trường bắt buộc nếu thiếu
            content: "Design Report", // Luôn set giá trị mặc định
            // Đảm bảo các trường object có giá trị mặc định
            vatLieuBoTruyen: pdfContent.vatLieuBoTruyen || {},
            dauVaoUngSuat: pdfContent.dauVaoUngSuat || {},
            // Đảm bảo Motor là object
            Motor: pdfContent.Motor || {}
        };

        console.log("Validated export data:", exportData);

        // Chuẩn bị dữ liệu gửi lên server
        fetch("/Input/ExportPdf", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            },
            body: JSON.stringify(exportData)
        })
            .then(async response => {
                console.log("Server response status:", response.status);
                console.log("Server response headers:", response.headers);

                if (!response.ok) {
                    // Đọc thông báo lỗi từ server
                    const errorText = await response.text();
                    console.error("Server error response:", errorText);

                    let errorMessage = `Server error (${response.status}): `;
                    try {
                        // Thử parse JSON error message
                        const errorJson = JSON.parse(errorText);
                        errorMessage += errorJson.message || errorJson.error || errorText;
                    } catch {
                        // Nếu không phải JSON thì dùng text trực tiếp
                        errorMessage += errorText || response.statusText;
                    }
                    throw new Error(errorMessage);
                }
                return response.blob();
            })
            .then(blob => {
                console.log("Received PDF blob:", blob.size, "bytes");

                if (blob.size === 0) {
                    throw new Error("Received empty PDF file");
                }

                // Gán dữ liệu vào các input field
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `GearboxDesign_${new Date().toISOString().slice(0, 10)}.pdf`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                window.URL.revokeObjectURL(url);
                console.log("PDF download completed successfully");
            })
            .catch(error => {
                console.error("Error during PDF export:", error);

                // Hiển thị thông báo lỗi chi tiết cho người dùng
                let errorMessage = "Có lỗi xảy ra khi xuất PDF:\n";
                errorMessage += error.message || "Không xác định được nguyên nhân lỗi";

                // Hiển thị thông báo lỗi
                alert(errorMessage);

                // Log thêm thông tin debug
                console.error("Error details:", {
                    message: error.message,
                    stack: error.stack,
                    name: error.name,
                    timestamp: new Date().toISOString()
                });
            });
    }

    document.addEventListener('DOMContentLoaded', function () {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    })

    //////////////////////////////////
</script>